plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'com.dicedmelon.gradle.jacoco-android'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.catscoffeeandkitchen.fitnessjournal"
        minSdk 26
        targetSdk 33
        versionCode 10
        versionName "0.1.10"

        testInstrumentationRunner "com.catscoffeeandkitchen.fitnessjournal.workouts.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            versionNameSuffix '-debug'
            applicationIdSuffix '.debug'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += [
                "-Xjvm-default=all",
                "-Xopt-in=kotlin.RequiresOptIn"
        ]
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    namespace 'com.catscoffeeandkitchen.fitnessjournal'
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoAndroidUnitTestReport {
    destination "$rootDir/coverage-report/app/"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}


dependencies {
    implementation project(path: ':domain')
    implementation project(path: ':data')

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Lifecycle Service for timer
    implementation "androidx.lifecycle:lifecycle-service:2.5.1"

    // Material Design
    implementation 'com.google.android.material:material:1.6.0'
    implementation "androidx.compose.material:material:$compose_version"

    implementation "androidx.compose.material3:material3-window-size-class:$material3_version"
    implementation "androidx.compose.material3:material3:$material3_version"

    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"

    // Accompanist UI
    implementation "com.google.accompanist:accompanist-flowlayout:0.27.0"

    // to use kotlin activity extensions for ViewModel
    implementation 'androidx.activity:activity-ktx:1.6.0'

    // Animated Navigation
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"

    // Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'

    // Hilt dependency injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.navigation:navigation-compose:2.5.3"

    // Lottie Animations
    implementation "com.airbnb.android:lottie-compose:$lottie_version"

    // Charting
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // Paging 3
    implementation "androidx.room:room-paging:$room_version"

    implementation "androidx.paging:paging-runtime:$paging_version"
    // optional - Jetpack Compose integration
    implementation "androidx.paging:paging-compose:1.0.0-alpha17"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    // moshi converter
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.14.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.14.0"

    //okhttp + logging
    api "com.squareup.okhttp3:logging-interceptor:4.9.0"
    api "com.squareup.retrofit2:retrofit:2.9.0"
    api "com.squareup.retrofit2:converter-moshi:2.9.0"

    // Image Loading - Glide https://bumptech.github.io/glide/int/compose.html
    implementation "com.github.bumptech.glide:compose:1.0.0-alpha.1"

    implementation 'androidx.test.espresso:espresso-idling-resource:3.5.0'

    /////////// Tests //////////////////////
    androidTestImplementation 'tools.fastlane:screengrab:2.1.1'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}
