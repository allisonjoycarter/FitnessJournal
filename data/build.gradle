plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.dicedmelon.gradle.jacoco-android'
}

android {
    compileSdk 33

    defaultConfig {
        minSdk 26
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString(),
                              "room.incremental":"true",
                              "room.expandProjection":"true",
                ]
            }
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'

        // TODO: Remove this
        freeCompilerArgs += [
                "-Xjvm-default=all",
        ]
    }
    namespace 'com.catscoffeeandkitchen.data'
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoAndroidUnitTestReport {
    destination "$rootDir/coverage-report/data/"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

dependencies {
    implementation project(path: ':domain')

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'

    // Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Hilt
    implementation "com.google.dagger:hilt-core:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Room (Database)
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-paging:$room_version"

    // Paging 3.0
    implementation 'androidx.paging:paging-compose:1.0.0-alpha17'

    // optional - Test helpers
//    testImplementation "androidx.room:room-testing:$room_version"

    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:$room_version"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    // moshi converter
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.14.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.14.0"

    //okhttp + logging
    api "com.squareup.okhttp3:logging-interceptor:4.9.0"
    api "com.squareup.retrofit2:retrofit:2.9.0"
    api "com.squareup.retrofit2:converter-moshi:2.9.0"

    //csv parsing
    implementation "com.github.doyaaaaaken:kotlin-csv-jvm:1.6.0"

    ////////////////// Tests //////////////////
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.9.1'
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    testImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    testImplementation "io.mockk:mockk:$mockk_version"
}